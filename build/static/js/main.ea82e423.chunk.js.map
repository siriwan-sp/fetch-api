{"version":3,"sources":["components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","App.js","index.js"],"names":["module","exports","Movie","props","className","classes","movie","title","releaseDate","openingText","producer","MovieList","movies","map","key","id","App","useState","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","useCallback","a","fetch","response","ok","Error","json","data","transformedMovies","results","moviesData","episode_id","opening_crawl","releaseData","release_date","message","useEffect","content","length","MoviesList","Fragment","onClick","ReactDOM","render","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,cAAc,kC,wMCcjBC,EAXD,SAACC,GACb,OACE,wBAAIC,UAAWC,IAAQC,OACrB,4BAAKH,EAAMI,OACX,4BAAKJ,EAAMK,aACX,2BAAIL,EAAMM,aACV,4BAAKN,EAAMO,Y,gBCYFC,EAjBG,SAACR,GACjB,OACE,wBAAIC,UAAWC,IAAQ,gBACpBF,EAAMS,OAAOC,KAAI,SAACP,GAAD,OAChB,kBAAC,EAAD,CACEQ,IAAKR,EAAMS,GACXR,MAAOD,EAAMC,MACbC,YAAaF,EAAME,YACnBC,YAAaH,EAAMG,YACnBC,SAAUJ,EAAMI,gB,MC6DXM,MApEf,WACA,MAA4BC,mBAAS,IAArC,mBAAOL,EAAP,KAAeM,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAIMC,EAAoBC,sBAAW,sBAAC,gCAAAC,EAAA,6DACpCL,GAAa,GACbE,EAAS,MAF2B,kBAIXI,MAAM,gCAJK,WAI5BC,EAJ4B,QAMrBC,GANqB,sBAO1B,IAAIC,MAAM,yBAPgB,wBAUfF,EAASG,OAVM,QAU5BC,EAV4B,OAc5BC,EAAoBD,EAAKE,QAAQpB,KAAI,SAACqB,GAC1C,MAAM,CACJnB,GAAImB,EAAWC,WACf5B,MAAO2B,EAAW3B,MAClBE,YAAayB,EAAWE,cACxBC,YAAaH,EAAWI,aACxB5B,SAAUwB,EAAWxB,aAG7BQ,EAAUc,GAvB4B,kDAyBlCV,EAAS,KAAMiB,SAzBmB,QA2BpCnB,GAAa,GA3BuB,0DA4BjC,IAEHoB,qBAAU,WACRjB,MACC,CAACA,IAGJ,IAAIkB,EAAU,+CAcd,OAZG7B,EAAO8B,OAAU,IAClBD,EAAU,kBAACE,EAAD,CAAY/B,OAAQA,KAG5BS,IACFoB,EAAU,2BAAIpB,IAGbF,IACDsB,EAAU,0CAIV,kBAAC,IAAMG,SAAP,KACE,iCACE,4BAAQC,QAAStB,GAAjB,iBAEF,iCACGkB,KC/DTK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ea82e423.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__LuouI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__22jos\"};","import React from 'react';\n\nimport classes from './Movie.module.css';\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n      <h1>{props.producer}</h1>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\n\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes['movies-list']}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.releaseDate}\n          openingText={movie.openingText}\n          producer={movie.producer}\n\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\n\n\nfunction App() {\nconst [movies, setMovies] = useState([]);\nconst [isLoading, setIsLoading] = useState(false);\nconst [error, setError] = useState(null);\n\n\n\nconst fetchMoviesHandler= useCallback(async () => {\n  setIsLoading(true);\n  setError(null);\n  try{\n    const response = await fetch('https://swapi.dev/api/films/')\n\n    if(!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n     \n    const data = await response.json();\n\n  \n\n    const transformedMovies = data.results.map((moviesData) => {\n      return{\n        id: moviesData.episode_id,\n        title: moviesData.title,\n        openingText: moviesData.opening_crawl,\n        releaseData: moviesData.release_date,\n        producer: moviesData.producer\n      };\n    });\nsetMovies(transformedMovies);\n  }catch (error){\n    setError(error.message);\n  }\n  setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  \n\n  let content = <p>Found no movies.</p>;\n\n  if(movies.length >  0){\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p> \n  }\n\n  if(isLoading){\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}